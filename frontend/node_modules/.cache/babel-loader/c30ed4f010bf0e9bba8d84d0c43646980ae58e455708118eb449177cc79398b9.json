{"ast":null,"code":"var _jsxFileName = \"F:\\\\School Work\\\\Fourth Year Ryerson\\\\Second Semester\\\\COE 892\\\\Base-Working\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\RunwayStatus.tsx\";\n// dashboard/RunwayStatus.tsx\nimport React from 'react';\nimport { Paper, Typography, List, ListItem, ListItemText } from '@mui/material';\nimport DirectionsRunIcon from '@mui/icons-material/DirectionsRun';\nimport { PlaneAnimation } from './PlaneAnimation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RunwayStatus = ({\n  runways,\n  airplanes\n}) => {\n  const getPlaneStatus = planeId => {\n    if (!planeId) return 'idle';\n    const plane = airplanes[planeId];\n    if (!plane) return 'idle';\n    if (plane.plane_state === 'landing') {\n      return 'landing';\n    }\n    if (plane.plane_state === 'taxiing') {\n      return 'taxiing';\n    }\n    return 'idle';\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      mb: 2,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Runway Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: Object.entries(runways).map(([name, planeId]) => /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          position: 'relative',\n          height: 60\n        },\n        children: [planeId && /*#__PURE__*/_jsxDEV(PlaneAnimation, {\n          status: getPlaneStatus(planeId),\n          color: getPlaneStatus(planeId) === 'landing' ? 'error' : 'secondary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DirectionsRunIcon, {\n          sx: {\n            mr: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: name,\n          secondary: planeId || 'Empty',\n          secondaryTypographyProps: {\n            color: planeId ? 'secondary' : 'textSecondary'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = RunwayStatus;\nvar _c;\n$RefreshReg$(_c, \"RunwayStatus\");","map":{"version":3,"names":["React","Paper","Typography","List","ListItem","ListItemText","DirectionsRunIcon","PlaneAnimation","jsxDEV","_jsxDEV","RunwayStatus","runways","airplanes","getPlaneStatus","planeId","plane","plane_state","elevation","sx","p","mb","position","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","name","height","status","color","mr","primary","secondary","secondaryTypographyProps","_c","$RefreshReg$"],"sources":["F:/School Work/Fourth Year Ryerson/Second Semester/COE 892/Base-Working/frontend/src/components/Dashboard/RunwayStatus.tsx"],"sourcesContent":["// dashboard/RunwayStatus.tsx\r\nimport React from 'react';\r\nimport { Paper, Typography, List, ListItem, ListItemText, Box } from '@mui/material';\r\nimport DirectionsRunIcon from '@mui/icons-material/DirectionsRun';\r\nimport { PlaneAnimation } from './PlaneAnimation';\r\n\r\ninterface RunwayStatusProps {\r\n  runways: Record<string, string | null>;\r\n  airplanes: Record<string, any>; // Add airplanes prop\r\n}\r\n\r\nexport const RunwayStatus: React.FC<RunwayStatusProps> = ({ runways, airplanes }) => {\r\n  const getPlaneStatus = (planeId: string | null) => {\r\n    if (!planeId) return 'idle';\r\n    const plane = airplanes[planeId];\r\n    if (!plane) return 'idle';\r\n    \r\n    if (plane.plane_state === 'landing') {\r\n      return 'landing';\r\n    }\r\n    if (plane.plane_state === 'taxiing') {\r\n      return 'taxiing';\r\n    }\r\n    return 'idle';\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 2, mb: 2, position: 'relative' }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Runway Status\r\n      </Typography>\r\n      <List>\r\n        {Object.entries(runways).map(([name, planeId]) => (\r\n          <ListItem key={name} sx={{ position: 'relative', height: 60 }}>\r\n            {planeId && (\r\n              <PlaneAnimation \r\n                status={getPlaneStatus(planeId) as any}\r\n                color={getPlaneStatus(planeId) === 'landing' ? 'error' : 'secondary'}\r\n              />\r\n            )}\r\n            <DirectionsRunIcon sx={{ mr: 2 }} />\r\n            <ListItemText\r\n              primary={name}\r\n              secondary={planeId || 'Empty'}\r\n              secondaryTypographyProps={{\r\n                color: planeId ? 'secondary' : 'textSecondary'\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAa,eAAe;AACpF,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlD,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EACnF,MAAMC,cAAc,GAAIC,OAAsB,IAAK;IACjD,IAAI,CAACA,OAAO,EAAE,OAAO,MAAM;IAC3B,MAAMC,KAAK,GAAGH,SAAS,CAACE,OAAO,CAAC;IAChC,IAAI,CAACC,KAAK,EAAE,OAAO,MAAM;IAEzB,IAAIA,KAAK,CAACC,WAAW,KAAK,SAAS,EAAE;MACnC,OAAO,SAAS;IAClB;IACA,IAAID,KAAK,CAACC,WAAW,KAAK,SAAS,EAAE;MACnC,OAAO,SAAS;IAClB;IACA,OAAO,MAAM;EACf,CAAC;EAED,oBACEP,OAAA,CAACR,KAAK;IAACgB,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBAC7Db,OAAA,CAACP,UAAU;MAACqB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbnB,OAAA,CAACN,IAAI;MAAAmB,QAAA,EACFO,MAAM,CAACC,OAAO,CAACnB,OAAO,CAAC,CAACoB,GAAG,CAAC,CAAC,CAACC,IAAI,EAAElB,OAAO,CAAC,kBAC3CL,OAAA,CAACL,QAAQ;QAAYc,EAAE,EAAE;UAAEG,QAAQ,EAAE,UAAU;UAAEY,MAAM,EAAE;QAAG,CAAE;QAAAX,QAAA,GAC3DR,OAAO,iBACNL,OAAA,CAACF,cAAc;UACb2B,MAAM,EAAErB,cAAc,CAACC,OAAO,CAAS;UACvCqB,KAAK,EAAEtB,cAAc,CAACC,OAAO,CAAC,KAAK,SAAS,GAAG,OAAO,GAAG;QAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CACF,eACDnB,OAAA,CAACH,iBAAiB;UAACY,EAAE,EAAE;YAAEkB,EAAE,EAAE;UAAE;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpCnB,OAAA,CAACJ,YAAY;UACXgC,OAAO,EAAEL,IAAK;UACdM,SAAS,EAAExB,OAAO,IAAI,OAAQ;UAC9ByB,wBAAwB,EAAE;YACxBJ,KAAK,EAAErB,OAAO,GAAG,WAAW,GAAG;UACjC;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAdWI,IAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeT,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACY,EAAA,GA1CW9B,YAAyC;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}